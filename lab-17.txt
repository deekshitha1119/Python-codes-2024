lab-17
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Question-1-Suppose you have a dataset containing daily temperature readings for a city, and you want to identify days
with extreme temperature conditions.Find days where the temperature either exceeded 35 degrees Celsius (hot day) or 
dropped below 5 degrees Celsius (cold day).Input:temperatures = np.array([32.5, 34.2, 36.8, 29.3, 31.0, 38.7, 23.1, 18.5, 22.8, 37.2])
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import numpy as np                                                                                                       #importing NumPy as np
temperatures = np.array([32.5, 34.2, 36.8, 29.3, 31.0, 38.7, 23.1, 18.5, 22.8, 37.2, 4.0, 15.0, -4.0, 5.0, 12.0])        #Array of temperatures
hot_days = np.where(temperatures > 35)[0]                                                                                #index value of hot days temp > 35 degree
cold_days = np.where(temperatures < 5)[0]                                                                                #index value of col days temp<5 degree
print("Hot Days:\n")                                                                                                     #print header of hot days
print("Day\tTemperature (째C)")                                                                                      
for day in hot_days:                                                                                                     #forloop
    print(f"{day+1}\t{temperatures[day]}")                                                                               #print day and temperature
print("\nCold Days:\n")                                                                                                  #print header for cold days
print("Day\tTemperature (째C)")
for day in cold_days:                                                                                                    #forloop
    print(f"{day+1}\t{temperatures[day]}")                                                                               #print day and temperature

OUTPUT:
Hot Days:

Day	Temperature (째C)
3	36.8
6	38.7
10	37.2

Cold Days:

Day	Temperature (째C)
11	4.0
13	-4.0

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Question-2-Suppose you have a dataset containing monthly sales data for a company, and you want to split this data into quarterly 
reports for analysis and reporting purposes.Input:monthly_sales = np.array([120, 135, 148, 165, 180, 155, 168, 190, 205, 198, 210, 225])
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
import numpy as np                                                                                              #importing NumPy as np
monthly_sales = np.array([120, 135, 148, 165, 180, 155, 168, 190, 205, 198, 210, 225])                          #Array of monthly sales data
quarterly_sales = monthly_sales.reshape(4, 3)                                                                   #using reshape for quarterly sales
for quarter, sales in enumerate(quarterly_sales, 1):                                                            #forloop
    print(f"Quarter {quarter} Sales (in thousands of dollars):",sales)                                          #print sales data for each quarter

OUTPUT:
Quarter 1 Sales (in thousands of dollars): [120 135 148]
Quarter 2 Sales (in thousands of dollars): [165 180 155]
Quarter 3 Sales (in thousands of dollars): [168 190 205]
Quarter 4 Sales (in thousands of dollars): [198 210 225]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Question-3-. Suppose you have a dataset containing customer data, and you want to split this data into two groups:one group for customers 
who made a purchase in the last 30 days and another group for customers who haven't made a purchase in the last 30 days.
Input:customer_ids = np.array([101, 102, 103, 104, 105, 106, 107, 108, 109, 110]) last_purchase_days_ago = np.array([5, 15, 20, 25, 30, 35, 40, 45, 50, 55])
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import numpy as np                                                                                           #importing NumPy as np
customer_ids = np.array([101, 102, 103, 104, 105, 106, 107, 108, 109, 110])                                  #Array of customer IDs
last_purchase_days_ago = np.array([5, 15, 20, 25, 30, 35, 40, 45, 50, 55])                                   #Array of days of last purchase 
active_customers = customer_ids[last_purchase_days_ago <= 30]                                                #identify active customers
inactive_customers = customer_ids[last_purchase_days_ago > 30]                                               #identify inactive customers
print("Active Customers (Last Purchase <= 30 days ago):", active_customers)                                  #print list of active customers
print("Inactive Customers (Last Purchase > 30 days ago):", inactive_customers)                               #print list of inactive customers

OUTPUT:
Active Customers (Last Purchase <= 30 days ago): [101 102 103 104 105]
Inactive Customers (Last Purchase > 30 days ago): [106 107 108 109 110]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Question-4-Suppose you have two sets of employee data-one containing information about full-time employees and another containing information about
part-time employees. You want to combine this data to create a comprehensive employee dataset for HR analysis.
Input:# Employee data for full-time employees
full_time_employees = np.array([
[101, 'John Doe', 'Full-Time', 55000],
[102, 'Jane Smith', 'Full-Time', 60000),
[103, 'Mike Johnson', 'Full-Time', 52000]]
# Employee data for part-time employees part_time_employees = np.array([
[201, 'Alice Brown', 'Part-Time', 25000],
[202, 'Bob Wilson', 'Part-Time', 28000],
[203, 'Emily Davis', 'Part-Time', 22000]])
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import numpy as np                                                                                                  #importing NumPy as np
full_time_employees = np.array([                                                                                    #Array of full-time employees with details
    [101, 'John Doe', 'Full-Time', 55000],
    [102, 'Jane Smith', 'Full-Time', 60000],
    [103, 'Mike Johnson', 'Full-Time', 52000]
])
part_time_employees = np.array([                                                                                    #Array of parttime employees with details
    [201, 'Alice Brown', 'Part-Time', 25000],
    [202, 'Bob Wilson', 'Part-Time', 28000],
    [203, 'Emily Davis', 'Part-Time', 22000]
])
comprehensive_employee_data = np.vstack((full_time_employees, part_time_employees))                                 #combining both arrays vertically
print("Combined Employee Data:")                                                                                    #print combined employee data
for employee in comprehensive_employee_data:
    print(f"Employee ID: {employee[0]}, Name: {employee[1]}, Type: {employee[2]}, Salary: {employee[3]}")

OUTPUT:
Combined Employee Data:
Employee ID: 101, Name: John Doe, Type: Full-Time, Salary: 55000
Employee ID: 102, Name: Jane Smith, Type: Full-Time, Salary: 60000
Employee ID: 103, Name: Mike Johnson, Type: Full-Time, Salary: 52000
Employee ID: 201, Name: Alice Brown, Type: Part-Time, Salary: 25000
Employee ID: 202, Name: Bob Wilson, Type: Part-Time, Salary: 28000
Employee ID: 203, Name: Emily Davis, Type: Part-Time, Salary: 22000
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

